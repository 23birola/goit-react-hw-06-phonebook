{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","redux/slices/contacts-slice.js","redux/slices/filter-slice.js","components/Filter/Filter.jsx","App.js","reportWebVitals.js","redux/store/index.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","ContactForm","onSubmit","className","css","contactForm","htmlFor","type","name","id","formInput","pattern","title","required","ContactListItem","contact","deleteContact","contactItem","number","onClick","ContactList","contacts","contactList","map","ItemsSlice","createSlice","initialState","reducers","addItem","state","action","payload","deleteItem","filter","actions","filterSlice","filterContacts","Filter","filterByName","filterInput","onChange","App","useSelector","console","log","dispatch","useDispatch","contactId","selectedContacts","toLowerCase","includes","container","e","preventDefault","target","elements","value","uuidv4","find","toast","error","filterName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","rootReducer","combineReducers","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6b1611da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2pzkz\"};","import PropTypes from 'prop-types';\r\nimport css from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  return <form onSubmit={onSubmit} className={css.contactForm}>\r\n    <label htmlFor=\"name\">Name</label>\r\n    <input\r\n      type=\"text\"\r\n      name=\"name\"\r\n      id=\"name\"\r\n      className={css.formInput}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n       required\r\n      />\r\n    <label htmlFor=\"number\">Number</label>\r\n    <input\r\n     type=\"tel\"\r\n     name=\"number\"\r\n     id=\"number\"\r\n     className={css.formInput}\r\n     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n     title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n     required\r\n    />\r\n    <button type=\"submit\">Add contact</button>\r\n    </form>\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n};\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport css from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({contact, deleteContact}) => {\r\nreturn (\r\n    <li className={css.contactItem}>\r\n        <span className={css.name}>{contact.name}</span>\r\n        <span className={css.number}>{contact.number}</span>\r\n        <button type=\"button\" onClick={() => deleteContact(contact.id)}>Delete</button>\r\n    </li>);\r\n}\r\n    \r\nContactListItem.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    deleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;","import PropTypes from 'prop-types';\r\nimport css from './ContactList.module.css';\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n      <ul className={css.contactList}>\r\n        {contacts.map(contact =>\r\n          <ContactListItem contact={contact} key={contact.id} deleteContact={deleteContact}/>)}\r\n      </ul>);\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst ItemsSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState,\r\n  reducers: {\r\n    addItem: (state, action) => [...state, action.payload],\r\n    deleteItem: (state, action) =>\r\n      state.filter((contact) => contact.id !== action.payload),\r\n  },\r\n});\r\n\r\nexport const { addItem, deleteItem } = ItemsSlice.actions;\r\nexport default ItemsSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState: \"\",\r\n  reducers: {\r\n    filterContacts: (state, action) => action.payload,\r\n  },\r\n});\r\n\r\nexport const { filterContacts } = filterSlice.actions;\r\nexport default filterSlice.reducer;","import PropTypes from 'prop-types';\r\nimport css from './Filter.module.css';\r\n\r\nconst Filter = ({ filterByName }) => {\r\n    return (\r\n        <div className={css.filter}>\r\n            <label htmlFor=\"filter\">Find contacts by name</label>\r\n            <input type=\"text\" name=\"filter\" id=\"filter\" className={css.filterInput} onChange={filterByName} />\r\n        </div>);\r\n};\r\n\r\nFilter.propTypes = {\r\n    filterByName: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;","import { v4 as uuidv4 } from 'uuid';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport { addItem, deleteItem } from './redux/slices/contacts-slice';\nimport { filterContacts } from './redux/slices/filter-slice';\nimport Filter from './components/Filter/Filter';\nimport css from './App.module.css';\n\n\nexport default function App() {\n  const contacts = useSelector((state) => state.contacts);\n  console.log(contacts);\n  const filter = useSelector((state) => state.filter)\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n    const id = uuidv4();\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (existingContact) {\n      return toast.error(`${name} is already in contacts!!!`);\n    }\n    dispatch(addItem({ id, name, number }));\n\n    e.target.elements.name.value = '';\n    e.target.elements.number.value = '';\n  };\n\n  const handleChange = e => {\n    const filterName = e.target.value.toLowerCase();\n    console.log(filterName);\n    dispatch(filterContacts(filterName));\n  };\n\n  const handleFilter = () => {\n    if (!filter) {\n      return;\n    } else {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter),\n      );\n    }\n  };\n\n  const deleteContact = contactId => {\n    dispatch(deleteItem(contactId));\n  };\n\n  const selectedContacts = handleFilter();\n\n  return (\n    <div className={css.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={onSubmit} />\n\n      <h2>Contacts</h2>\n      <Filter filterByName={handleChange} />\n      {!filter && (\n        <ContactList contacts={contacts} deleteContact={deleteContact} />\n      )}\n      {filter && (\n        <ContactList\n          contacts={selectedContacts}\n          deleteContact={deleteContact}\n        />\n      )}\n      <Toaster />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import { createStore } from \"redux\";\r\n// import { devToolsEnhancer } from \"redux-devtools-extension\";\r\n// import { rootReducer } from \"../reducers/rootReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport filter from \"../slices/filter-slice\";\r\nimport contacts from \"../slices/contacts-slice\";\r\n// import logger from 'redux-logger';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER, } from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\n\r\n// const store = createStore(rootReducer, devToolsEnhancer());\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n \r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter']\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n  contacts,\r\n  filter\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer:  persistReducer(contactsPersistConfig, rootReducer),\r\n    middleware,\r\n    devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store/index\";\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store.store}>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2mErY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactListItem_name____gim\",\"number\":\"ContactListItem_number__27W_Y\"};"],"sourceRoot":""}